version: 2.1

executors:
  my_exec_env:
    docker:
      - image: amazon/aws-cli

jobs:
  create_and_deploy_front_end:
    executor: my_exec_env
    steps:
      - checkout
      - run: |
          aws cloudformation deploy --template-file bucket.yml \
          --parameter-overrides MyBucketName=ammed-985729960198-${CIRCLE_WORKFLOW_ID:0:7} \
          --stack-name bucket-${CIRCLE_WORKFLOW_ID:0:7}
      - run: aws s3 sync . s3://ammed-985729960198-${CIRCLE_WORKFLOW_ID:0:7} --delete
  
  get_last_deployment_id:
    executor: my_exec_env
    steps:
      - checkout
      - run: yum install tar gzip -y
      - run:
          name: query the existing cloudformation stack
          command: |
            aws cloudformation \
            list-exports --query "Exports[?Name==\`PipelineID\`].Value" \
            --no-paginate --output text > ~/textfile.txt
      - persist_to_workspace:
          root: ~/
          paths:
            - textfile.txt

  promote_to_production:
    executor: my_exec_env
    steps:
      - checkout
      - run: |
          aws cloudformation deploy --stack-name production-distro \
          --template-file cloudfront.yml \
          --parameter-overrides PipelineID=ammed-985729960198-${CIRCLE_WORKFLOW_ID:0:7}

  clean_up_old_front_end:
    executor: my_exec_env
    steps:
      - checkout
      - run: yum install tar gzip -y
      - attach_workspace:
          at: ~/
      - run: |
          export OldBucketId=$(cat ~/textfile.txt)
          aws s3 rm "s3://${OldBucketId}" --recursive

workflows:
  default:
    jobs:
      - create_and_deploy_front_end
      - promote_to_production:
          requires:
            - create_and_deploy_front_end
      - get_last_deployment_id
      - clean_up_old_front_end:
          requires:
            - get_last_deployment_id
            - promote_to_production